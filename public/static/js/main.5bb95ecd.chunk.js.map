{"version":3,"sources":["logo.png","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","react_router_dom","to","concat","MissionKey","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_apollo_esm","query","loading","error","data","bundle_default","duration","count","console","log","launches","map","Component","LAUNCH_QUERY","Launch_templateObject","Launch","props","match","params","parseInt","variables","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","classNam","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5bb95ecd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.acb89e4a.png\";","import React from 'react'\nimport classNames from 'classnames'\nimport Moment from 'react-moment'\nimport { Link } from 'react-router-dom'\n\nexport default function LaunchItem({ launch: { flight_number, mission_name, launch_date_local, launch_success } }) {\n  return (\n    <div className=\"card card-body mb-3\">\n        <div className=\"row\">\n            <div className=\"col-md-9\">\n                <h4>Mission: <span className={classNames({\n                  'text-success': launch_success,\n                  'text-danger': !launch_success\n                })}>{ mission_name }</span></h4>\n                <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{ launch_date_local }</Moment></p>\n            </div>\n            <div className=\"col-md-3\">\n                <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\n            </div>\n\n        </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function MissionKey() {\n  return (\n    <div className='my-3'>\n      <p>\n          <span className=\"px-3 mr-2 bg-success\"/> = Success\n      </p>\n      <p>\n          <span className=\"px-3 mr-2 bg-danger\"/> = Fail\n      </p>\n\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\n\n// Components\nimport LaunchItem from './LaunchItem'\nimport Skeleton from 'react-loading-skeleton';\nimport MissionKey from './MissionKey'\n\n\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches{\n          flight_number\n          mission_name\n          launch_date_local \n          launch_success\n        }\n    }\n`\n\nexport class Launches extends Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"display-4 my-3\">Launches</h1>\n        <MissionKey />\n        <Query query={LAUNCHES_QUERY}>\n            {({ loading, error, data }) => {\n                if(loading) return (\n                  <div className=\"card card-body mb-3\">\n                    <Skeleton duration={1} count={5}/>\n                  </div>\n                )\n\n                if(error) console.log(error)\n\n                return (\n                  <div>\n                    {\n                      data.launches.map(launch => (\n                        <LaunchItem key={launch.flight_number} launch={launch}/>\n                      ))\n                    }\n                  </div>\n                )\n            }}\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default Launches\n","import React, { Component } from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport { Link } from 'react-router-dom'\nimport classNames from 'classnames'\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_success\n            launch_date_local\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`\n\nexport class Launch extends Component {\n  render() {\n      let { flight_number } = this.props.match.params\n      flight_number = parseInt(flight_number)\n    return (\n      <div>\n            <Query query={LAUNCH_QUERY} variables={{flight_number}}>\n                {\n                    ({loading, error, data}) => {\n                        if(loading) return <h4>Loading ...</h4>\n                        if(error) console.log(error)\n                        const {mission_name, flight_number, launch_year, launch_success, rocket: {rocket_id, rocket_name, rocket_type} } = data.launch\n                        return (\n                            <div>\n                                <h1 className=\"display-4 my-3\">Mission: { mission_name }</h1>\n                                <h4 classNam=\"mb-3\">Launch Details</h4>\n                                <ul>\n                                    <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n                                    <li className=\"list-group-item\">Launch Year: {launch_year}</li>\n                                    <li className=\"list-group-item\">Launch Success: <span className={classNames({\n                                        'text-success': launch_success,\n                                        'text-danger': !launch_success\n                                    })}>{launch_success ? 'YES' : 'NO'}</span></li>\n                                </ul>\n                                <h4 className=\"my-3\">Roket Details</h4>\n                                <ul>\n                                    <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                                    <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                                    <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n                                </ul>\n                                <hr/>\n                                <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n                            </div>\n                        )\n                    }\n                }\n            </Query>\n      </div>\n    )\n  }\n}\n\nexport default Launch\n","import React from 'react';\nimport ApolloClient from 'apollo-boost'\nimport Launches from './components/Launches'\nimport Launch from './components/Launch'\nimport { ApolloProvider } from 'react-apollo'\nimport logo from \"./logo.png\"\nimport './App.css';\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img src={logo} alt=\"SpaceX\" style={{width: 300, display: \"block\", margin: 'auto'}}/> \n          <Route exact path='/' component={Launches}/>\n          <Route exact path='/launch/:flight_number' component={Launch}/>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}